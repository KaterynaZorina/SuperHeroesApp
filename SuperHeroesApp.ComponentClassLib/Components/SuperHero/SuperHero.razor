<EditForm Model="@_heroModel" OnValidSubmit="AddHero">
    <DataAnnotationsValidator/>

    <div class="form-group row">
        <h3 class="col-sm-6">Create new hero</h3>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Character</label>
        <div class="col-sm-6">
            <InputText @bind-Value="@_heroModel.Character" class="form-control" placeholder="Character"></InputText>
            <ValidationMessage For="@(() => _heroModel.Character)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-6">
            <InputText @bind-Value="@_heroModel.Name" class="form-control" placeholder="Name"></InputText>
            <ValidationMessage For="@(() => _heroModel.Name)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Description</label>
        <div class="col-sm-6">
            <InputTextArea @bind-Value="@_heroModel.Description" class="form-control" placeholder="Description"></InputTextArea>
            <ValidationMessage For="@(() => _heroModel.Description)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Universe</label>
        <div class="col-sm-6">
            <InputSelect @bind-Value="_heroModel.Universe" class="form-control">
                <option value="" selected>Select universe</option>
                <option value="@UniverseType.Marvel">Marvel</option>
                <option value="@UniverseType.DC">DC</option>
            </InputSelect>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
          <button type="submit" class="btn btn-sm btn-outline-secondary">Create</button>
        </div>
      </div>
</EditForm>

@code {
    [Parameter]
    public EventCallback<SuperHeroModel> OnSuperHeroAdded { get; set; }

    private SuperHeroModel _heroModel = new SuperHeroModel();

    private async Task AddHero()
    {
        await OnSuperHeroAdded.InvokeAsync(_heroModel);
    }
}